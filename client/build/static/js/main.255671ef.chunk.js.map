{"version":3,"sources":["utils/API.js","UserContext.js","components/Navbar/index.js","components/Layout/index.js","components/Main/index.js","components/About/index.js","components/Welcome/index.js","components/SignOut/index.js","components/SubmitForum/index.js","components/Forum/index.js","components/SubmitTextMessage/index.js","components/SubmitEmail/index.js","components/SubmitPayment/index.js","components/UserDirectory/index.js","components/UserProtectedRoutes/index.js","components/AdminProtectedRoutes/index.js","index.js","App.js"],"names":["userData","Promise","resolve","reject","axios","post","then","response","catch","error","Error","regData","data","console","log","get","forumData","id","delete","textData","emailData","paymentData","UserContext","createContext","MainNavbar","useContext","isLoggedIn","setLoggedIn","isAdmin","setIsAdmin","setUserInfo","useState","username","setUsername","password","setPassword","errorMessage","setErrorMessage","showLogin","setShowLogin","history","useHistory","firstName","setFirstName","lastName","setLastName","email","setEmail","phone","setPhone","showRegister","setShowRegister","Navbar","bg","variant","collapseOnSelect","expand","Brand","as","Link","to","Toggle","Collapse","Nav","className","NavDropdown","title","Item","style","color","Form","inline","Button","type","onClick","event","preventDefault","push","Modal","show","onHide","Header","closeButton","Title","Body","Group","controlId","Label","Control","placeholder","aria-label","value","onChange","target","Text","Footer","API","loggedIn","role","fontSize","phoneNumber","registered","index","Main","href","Jumbotron","fluid","Container","Welcome","userInfo","SubmitForm","setTitle","forumText","setForumText","theme","backgroundColor","modules","toolbar","currentDate","Date","now","toString","date","forumInfo","setForumInfo","useEffect","map","item","key","_id","parse","SubmitTextMessage","recipient","setRecipient","text","setText","rows","SubmitEmail","emailText","setEmailText","users","setUsers","CheckoutForm","stripe","useStripe","elements","useElements","city","setCity","line1","setLine1","line2","setLine2","postal_code","setPostalCode","state","setState","name","setName","handleSubmit","a","createPaymentMethod","card","getElement","CardElement","billing_details","address","paymentMethod","amount","onSubmit","Row","Col","class","for","height","paddingTop","disabled","stripePromise","loadStripe","process","UserDirectory","Table","striped","bordered","hover","ProtectedRoute","Component","component","rest","render","props","ReactDOM","Provider","exact","path","About","SignOut","SubmitForum","Forum","SubmitPayment","document","getElementById"],"mappings":"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","file":"static/js/main.255671ef.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default {\r\n//authenticate user route\r\n\r\n    authenticateUser: function(userData) {\r\n        return new Promise((resolve, reject) =>{\r\n            axios.post(\"/api/user/login\", userData)\r\n            .then(response => {\r\n                resolve(response)\r\n            })\r\n            .catch(error => {\r\n                reject(Error(\"failed to login error: \" + error))\r\n            })\r\n        })\r\n    \r\n    },\r\n//register user route\r\n    registerUser: function(regData) {\r\n        return new Promise((resolve, reject) => {\r\n        axios.post(\"/api/user/register\", regData)\r\n        .then(response=>{\r\n            if(response.data){\r\n                resolve(response)\r\n            }\r\n            else{\r\n                console.log('logon error')\r\n            }\r\n        })\r\n        .catch(error=>{\r\n            reject(Error(\"failed to register error: \" + error))\r\n        })\r\n    })\r\n    },\r\n//register user route\r\ngetUsers: function() {\r\n    return new Promise((resolve, reject) => {\r\n    axios.get(\"/api/user/findAll\")\r\n    .then(response=>{\r\n        resolve(response)\r\n    })\r\n    .catch(error=>{\r\n        reject(Error(\"error: \" + error))\r\n    })\r\n})\r\n},\r\n//submit forum\r\n    submitForum: function(forumData){\r\n        return new Promise((resolve, reject) => {\r\n            axios.post(\"/api/forum/createForum\", forumData)\r\n        .then(response=>{\r\n            resolve(response)\r\n        })\r\n        .catch(error=>{\r\n            reject(Error(error))\r\n        })\r\n        })\r\n    },\r\n//get forum\r\n    getForums: function(){\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(\"/api/forum/getForums\")\r\n    .then(response=>{\r\n        resolve(response)\r\n    })\r\n    .catch(error=>{\r\n        reject(Error(error))\r\n    })\r\n    })\r\n    },\r\n//delete forum\r\n    deleteForum: function(id){\r\n        return new Promise((resolve, reject) => {\r\n            axios.delete(\"/api/forum/deleteForum/\" + id)\r\n        \r\n        .then(response=>{\r\n            resolve(response)\r\n        })\r\n        .catch(error=>{\r\n            reject(Error(error))\r\n        })\r\n    })\r\n    },\r\n//send text message\r\n    sendTextMessage: function(textData){\r\n        return new Promise((resolve, reject) => {\r\n            axios.post(\"/api/text/sendTextMessage/\", textData)\r\n        \r\n        .then(response=>{\r\n            resolve(response)\r\n        })\r\n        .catch(error=>{\r\n            reject(Error(error))\r\n        })\r\n    })\r\n    },\r\n//send email\r\n    sendEmail: function(emailData){\r\n        return new Promise((resolve, reject) => {\r\n            console.log(emailData)\r\n            axios.post(\"/api/email/sendEmail/\", emailData)\r\n        \r\n        .then(response=>{\r\n            console.log(response)\r\n            // resolve(response)\r\n        })\r\n        .catch(error=>{\r\n            console.log(error)\r\n            // reject(Error(error))\r\n        })\r\n    })\r\n    },\r\nsendPayment: function(paymentData){\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(\"/api/payment/sendPayment/\", paymentData)\r\n        .then(response=>{\r\n            console.log(response)\r\n            resolve(response)\r\n        })\r\n        .catch(error=>{\r\n            console.log(error)\r\n            reject(Error(error))\r\n        })\r\n    })\r\n    }\r\n};\r\n","import {createContext} from 'react'\r\n\r\nexport const UserContext = createContext(null);","import React, { useState, useContext, useEffect, useCallback } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport API from '../../utils/API'\r\nimport { Modal, Button, Form, Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport { UserContext } from '../../UserContext';\r\n\r\nexport default function MainNavbar() {\r\n\r\n    //Used for both Login and Registration\r\n    const { isLoggedIn, setLoggedIn } = useContext(UserContext);\r\n    const { isAdmin, setIsAdmin } = useContext(UserContext);\r\n    const { setUserInfo } = useContext(UserContext)\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    //Login\r\n\r\n    var [showLogin, setShowLogin] = useState(false);\r\n    const history = useHistory();\r\n    const handleCloseLogin = () => setShowLogin(false);\r\n    const handleShowLogin = () => setShowLogin(true);\r\n\r\n\r\n    const login = event => {\r\n        event.preventDefault();\r\n        API.authenticateUser({\r\n            username: username,\r\n            password: password\r\n        }).then(\r\n            function (response) {\r\n                console.log(response.data.loggedIn)\r\n                if (response.data.role === \"user\") {\r\n                    setLoggedIn(true)\r\n                    setUserInfo(response.data)\r\n                    history.push('/Welcome')\r\n                    setShowLogin(false)\r\n\r\n                }\r\n                else if (response.data.role === \"administrator\"){\r\n                    setIsAdmin(true)\r\n                    setLoggedIn(true)\r\n                    setUserInfo(response.data)\r\n                    history.push('/Welcome')\r\n                    setShowLogin(false)\r\n                }\r\n                else if (response === null) {\r\n                    setErrorMessage('username or password incorrect')\r\n                    setShowLogin(true);\r\n                }\r\n                else {\r\n                    setErrorMessage('username or password incorrect')\r\n                    setShowLogin(true);\r\n                }\r\n            }\r\n        )\r\n\r\n    }\r\n    // const enterFunction = useCallback((event) => {\r\n    //     if (event.keyCode === 13) {\r\n\r\n    //     }\r\n    // }, []);\r\n\r\n    // useEffect(() => {\r\n\r\n    //     document.addEventListener(\"keydown\", enterFunction, false);\r\n\r\n    //     return () => {\r\n\r\n    //         document.removeEventListener(\"keydown\", enterFunction, false);\r\n\r\n    //     };\r\n    // }, [showLogin]);\r\n\r\n\r\n    //Logout\r\n    const logout = event => {\r\n        event.preventDefault();\r\n        history.push('/SignOut')\r\n        setLoggedIn(false);\r\n        setIsAdmin(false);\r\n    }\r\n\r\n    //Registration\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n\r\n    const [showRegister, setShowRegister] = useState(false);\r\n    const handleCloseRegister = () => setShowRegister(false);\r\n    const handleShowRegister = () => setShowRegister(true);\r\n\r\n    const register = event => {\r\n        event.preventDefault();\r\n        API.registerUser({\r\n            firstName,\r\n            lastName,\r\n            username,\r\n            password,\r\n            email,\r\n            phoneNumber: phone\r\n        }).then(\r\n            function (response) {\r\n                if (response.data.registered === true) {\r\n                    setLoggedIn(true)\r\n                    setUserInfo(response.data)\r\n                    history.push('/Welcome')\r\n                    setShowRegister(false)\r\n\r\n                }\r\n                else if (response === null) {\r\n                    setShowRegister(true);\r\n                }\r\n                else {\r\n                    setErrorMessage(response.data.error)\r\n                    setShowRegister(true);\r\n                }\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Navbar bg=\"dark\" variant=\"dark\" collapseOnSelect expand=\"lg\">\r\n                <Navbar.Brand as={Link} to=\"/\">MEANR</Navbar.Brand>\r\n                <Navbar.Toggle />\r\n                <Navbar.Collapse>\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\r\n                    <Nav.Link as={Link} to=\"/About\">About</Nav.Link>\r\n                    {isLoggedIn ? <NavDropdown bg=\"dark\" title=\"Tools\" id=\"collapsible-nav-dropdown\">\r\n                        {isLoggedIn ? <NavDropdown.Item style={{ color: \"#000000\" }} as={Link} to=\"/Forum\">Forum</NavDropdown.Item> : ''}\r\n                        {isLoggedIn ? <NavDropdown.Item style={{ color: \"#000000\" }} as={Link} to=\"/SubmitPayment\">Submit Payment</NavDropdown.Item> : ''}\r\n                        {isAdmin? <NavDropdown.Item style={{ color: \"#000000\" }} as={Link} to=\"/SubmitForum\">Submit Forum</NavDropdown.Item> : ''}\r\n                        {isAdmin? <NavDropdown.Item style={{ color: \"#000000\" }} as={Link} to=\"/SubmitTextMessage\">Submit Text Message</NavDropdown.Item> : ''}\r\n                        {isAdmin? <NavDropdown.Item style={{ color: \"#000000\" }} as={Link} to=\"/SubmitEmail\">Submit Email</NavDropdown.Item> : ''}\r\n                        {isAdmin? <NavDropdown.Item style={{ color: \"#000000\" }} as={Link} to=\"/UserDirectory\">User Directory</NavDropdown.Item> : ''}\r\n                    </NavDropdown>: \"\"}\r\n                  \r\n                 \r\n                </Nav>\r\n                <br/>\r\n                <Form inline>\r\n                    {isLoggedIn ? '' : <Button type=\"button\" variant=\"outline-primary\" onClick={handleShowLogin}>Login</Button>}\r\n                    &nbsp;&nbsp;\r\n                    {isLoggedIn ? <Button variant=\"outline-primary\" onClick={logout}>Logout</Button>: ''}\r\n                    &nbsp;&nbsp;\r\n                    {isLoggedIn ? '' : <Button variant=\"outline-primary\" onClick={handleShowRegister}>Register</Button>}\r\n                </Form>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n\r\n\r\n            <Modal show={showLogin} onHide={handleCloseLogin}>\r\n                \r\n\r\n            <Form>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Login</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                        <Form.Group controlId=\"formBasicUsername\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control className=\"form-control mr-sm-2\" type=\"username\" placeholder=\"Username\" aria-label=\"Username\" value={username} onChange={event => setUsername(event.target.value)}  />\r\n                            <Form.Text className=\"text-muted\">\r\n                                {errorMessage}\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control className=\"form-control mr-sm-2\" type=\"password\" placeholder=\"Password\" aria-label=\"Password\" value={password} onChange={event => setPassword(event.target.value)} />\r\n                            <Form.Text className=\"text-muted\">\r\n                                {errorMessage}\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" type=\"submit\" onClick={login}>\r\n                        Submit\r\n                    </Button>\r\n                </Modal.Footer>\r\n                </Form>\r\n           \r\n            </Modal>\r\n            <Modal show={showRegister} onHide={handleCloseRegister}>\r\n            <Form>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Register</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                <Form.Group controlId=\"firstName\">\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control className=\"form-control mr-sm-2\" type=\"firstname\" placeholder=\"First Name\" aria-label=\"First Name\" value={firstName} onChange={event => setFirstName(event.target.value)} />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"lastName\">\r\n                    <Form.Label>Last Name</Form.Label>\r\n                    <Form.Control className=\"form-control mr-sm-2\" type=\"lastname\" placeholder=\"Last Name\" aria-label=\"Last Name\" value={lastName} onChange={event => setLastName(event.target.value)} />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"userName\">\r\n                    <Form.Label>User Name</Form.Label>\r\n                    <Form.Control className=\"form-control mr-sm-2\" type=\"username\" placeholder=\"Username\" aria-label=\"Username\" value={username} onChange={event => setUsername(event.target.value)} />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control className=\"form-control mr-sm-2\" type=\"email\" placeholder=\"Email\" aria-label=\"Email\" value={email} onChange={event => setEmail(event.target.value)}  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"phone\">\r\n                    <Form.Label>Phone Number</Form.Label>\r\n                    <Form.Control className=\"form-control mr-sm-2\" type=\"phone\" placeholder=\"Phone Number\" aria-label=\"Phone Number\" value={phone} onChange={event => setPhone(event.target.value)}  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"password\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control className=\"form-control mr-sm-2\" type=\"password\" placeholder=\"Password\" aria-label=\"Password\" value={password} onChange={event => setPassword(event.target.value)} />\r\n                </Form.Group>\r\n                <p style={{fontSize: \"0.85\", color: \"#FA8072\"}}>{errorMessage}</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" type=\"submit\" onClick={register}>\r\n                        Register\r\n                    </Button>\r\n                </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport MainNavbar from '../Navbar'\r\n\r\nexport default function index() {\r\n    return (\r\n       \r\n        <MainNavbar />\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Main() {\r\n\r\n  \r\n    return (\r\n        <div>\r\n            <div className=\"jumbotron\">\r\n                <h1 className=\"display-4\">MEANR</h1>\r\n                <p className=\"lead\"> (Mongo, Express, Axios, Node, React) This is a full stack boiler plate.</p>\r\n                <hr className=\"my-4\" />\r\n                <p>You can use this boiler plate to create full stack applications quickly</p>\r\n                <Link to=\"/About\" className=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">Learn more</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Container, Jumbotron } from 'react-bootstrap'\r\n\r\nexport default function index() {\r\n    return (\r\n        <div>\r\n            <Jumbotron fluid>\r\n                <Container>\r\n                    <h1>MEANR (Mongo Express Axios Node React)</h1>\r\n                    <h2>Overview</h2>\r\n                    <p>This will be a full stack boiler template for Mongo, Express, Axios, Node, and React. There will be other packages included.</p>\r\n\r\n                    <h2>Installation</h2>\r\n\r\n                    <p>Clone this repository then run the command npm i. This will install all the dependencies. Then sign up for the features that you would like to use such as Stripe for payments, or Twilio for text messaging, and fill out the necessary environment variables.</p>\r\n\r\n                    <h2>Requirements</h2>\r\n\r\n                    <ul>\r\n                        <li>NPM</li>\r\n                        <li>Mongo DB</li>\r\n                    </ul>\r\n\r\n                    <h2>Enviornment Variables</h2>\r\n\r\n                    <p>You will need to create a .env file for the Server side as well as the Client side. Some of these features will need accounts setup such as STRIPE (Payments), or TWILIO (Text Messaging).</p>\r\n\r\n                    <b>Server Side</b>\r\n                    <ul>\r\n                        <li>TWILIO_ACCOUNT_SID</li>\r\n                        <li>TWILIO_AUTH_TOKEN</li>\r\n                        <li>TWILIO_PHONE_NUMBER</li>\r\n                        <li>NODEMAILER_SENDER_EMAIL_ACCOUNT</li>\r\n                        <li>NODEMAILER_SENDER_EMAIL_PASS</li>\r\n                        <li>STRIPE_SECRET_KEY</li>\r\n                        <li>MONGO_DB_NAME</li>\r\n                    </ul>\r\n                    <b>Client Side</b>\r\n\r\n                    <ul>\r\n                        <li> REACT_APP_STRIPE_PUBLISHABLE_KEY</li>\r\n                    </ul>\r\n                    <h2>Features</h2>\r\n                    <ul>\r\n                        <li>Supports local authentication and registration</li>\r\n                        <li>User and Administrator protected routes</li>\r\n                        <li>Forum</li>\r\n                        <li>Text Messaging</li>\r\n                        <li>Emailing</li>\r\n                        <li>Payments</li>\r\n                    </ul>\r\n                    <h2>Dependencies</h2>\r\n                    <ul>\r\n                        <li>  <strike>Redux</strike> (Removed in favor of using Context Providers and useContext) </li>\r\n                        <li>  Express (Server) </li>\r\n                        <li>  Mongo (Server) </li>\r\n                        <li>  Mongoose (Server) </li>\r\n                        <li>  Axios (Client) </li>\r\n                        <li>  React (Client) </li>\r\n                        <li>  React-Router-DOM (Client) </li>\r\n                        <li>  Nodemon (Server) </li>\r\n                        <li>  Concurrently (Server) </li>\r\n                        <li>  Passport (Server) </li>\r\n                        <li>  BcryptJS (Server) </li>\r\n                        <li>  Helmet (Server) </li>\r\n                        <li>  Twilio (Server) </li>\r\n                        <li>  Cors (Server)</li>\r\n                        <li>  Dotenv (Server) </li>\r\n                        <li>  Nodemailer (Server) </li>\r\n                        <li>  Body-parser (Server) </li>\r\n                        <li>  Stripe (Server) </li>\r\n                        <li>  React Stripe Checkout (Client) </li>\r\n                        <li>  UUID (Server)</li>\r\n                    </ul>\r\n                </Container>\r\n            </Jumbotron>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Container, Jumbotron } from 'react-bootstrap'\r\nimport { UserContext } from '../../UserContext';\r\n\r\nexport default function Welcome() {\r\n    \r\n    const {userInfo} = useContext(UserContext);\r\n\r\n    return (\r\n    <Jumbotron fluid>\r\n    <Container>\r\n        <h1>Welcome to MEANR</h1>\r\n        <p>You have successfully logged in as <b>{userInfo.username}</b></p>\r\n    </Container>\r\n    </Jumbotron>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Container, Jumbotron, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function index() {\r\n    return (\r\n        <Jumbotron fluid>\r\n            <Container>\r\n                <h3>You have successfully signed out</h3>\r\n                <br />\r\n                <Button variant=\"outline-secondary\" as={ Link } to=\"/\">Return to Home</Button>\r\n            </Container>\r\n        </Jumbotron>\r\n       \r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport API from \"../../utils/API\"\r\nimport { Container, Form, Button, Jumbotron } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport '../SubmitForum/index.css'\r\n\r\nexport default function SubmitForm() {\r\n    const [title, setTitle] = useState('');\r\n    const [forumText, setForumText] = useState('');\r\n    const history = useHistory();\r\n\r\n    \r\n    const modules = { toolbar: [\r\n        [{ 'header': [1, 2, false] }],\r\n        ['bold', 'italic', 'underline','strike', 'blockquote', 'code-block', 'size', 'script'],\r\n        [{'color': []}],\r\n        [{'font': []}],\r\n        [{'align': []}],\r\n        [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\r\n        ['link'],\r\n        ['clean', 'formula', 'video']\r\n      ],};\r\n\r\n    const submitForum = event => {\r\n        event.preventDefault();\r\n  \r\n\r\n        const currentDate = Date(Date.now()).toString()\r\n\r\n        API.submitForum({\r\n            title: title,\r\n            forumText: forumText,\r\n            date: currentDate\r\n        }).then(\r\n            history.push('/Forum'),\r\n            setTitle(''),\r\n            setForumText('')\r\n        )\r\n\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Jumbotron fluid>\r\n            <Container>\r\n                \r\n                <h1>Submit Forum</h1>\r\n        \r\n                <Form>\r\n                    <Form.Group controlId=\"forumTitle\">\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control placeholder=\"Title\" value={title} onChange={event => setTitle(event.target.value)} />\r\n                    </Form.Group>\r\n                    <ReactQuill theme=\"snow\"className='ql-container' style={{backgroundColor:'#FFFFFF'}}  modules={modules} value={forumText} onChange={setForumText}/>\r\n                    <br />\r\n\r\n                    <Button to=\"/Forum\" variant=\"primary\" type=\"submit\" onClick={submitForum}>\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n            </Jumbotron>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useContext, useEffect, useCallback } from 'react'\r\nimport API from '../../utils/API'\r\nimport { Container, Button, Jumbotron } from 'react-bootstrap'\r\nimport { UserContext } from '../../UserContext';\r\nimport SubmitForm from '../../components/SubmitForum'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport parse from 'html-react-parser';\r\n\r\n\r\n\r\nexport default function () {\r\n    const { isAdmin, setIsAdmin } = useContext(UserContext);\r\n    const [forumInfo, setForumInfo] = useState([])\r\n    \r\n    var loaded = false;\r\n    const deleteForum = (id) => {\r\n        API.deleteForum(id)\r\n        .then(response => console.log(response))\r\n        .catch(error => console.log(error))\r\n     \r\n    }\r\n  \r\n    useEffect(() => {\r\n      \r\n       API.getForums().then(\r\n        function (response) {\r\n            setForumInfo(response.data)  \r\n        }\r\n        )\r\n     \r\n        \r\n        return () => {\r\n            \r\n        }\r\n    }, [forumInfo])\r\n\r\n    return (\r\n    <div>\r\n    <Jumbotron fluid>\r\n       <Container>\r\n           <h1>Forum</h1>\r\n           <br />\r\n           <hr />\r\n           {forumInfo.map(item => (\r\n               <div key = {item._id} id={item._id}>\r\n                    \r\n                <h2>{item.title} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                {isAdmin ?\r\n                    <Button id={item._id} onClick={()=> deleteForum(item._id)} variant=\"outline-danger\">delete forum</Button>\r\n                    : ''\r\n                }</h2>\r\n                <p style={{fontSize: \"0.85em\", color: \"#aaaaaa\"}}>posted: {item.date}</p> \r\n                <hr/>\r\n                <p><div>{parse(item.forumText)}</div></p>\r\n                <hr/>\r\n                <br/>\r\n                <br/>\r\n                </div>\r\n                )\r\n                )\r\n            }\r\n        \r\n       </Container>\r\n    </Jumbotron>\r\n    </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Form, Container, Button, Jumbotron } from 'react-bootstrap'\r\nimport API from '../../utils/API'\r\n\r\nexport default function SubmitTextMessage() {\r\n    const [recipient, setRecipient] = useState ('')\r\n    const [text, setText] = useState('')\r\n\r\n\r\n    const submitTextMessage = event => {\r\n        event.preventDefault();\r\n        API.sendTextMessage({\r\n            recipient: recipient,\r\n            text: text\r\n        }).then(\r\n           \r\n            setRecipient(''),\r\n            setText('')\r\n        )\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Jumbotron fluid>\r\n            <Container>\r\n                <h1>Submit Text Message</h1>\r\n        \r\n                <Form>\r\n                    <Form.Group controlId=\"forumTitle\">\r\n                        <Form.Label>Recipient</Form.Label>\r\n                        <Form.Control placeholder=\"Phone Number\" value={recipient} onChange={event => setRecipient(event.target.value)}/>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>Example textarea</Form.Label>\r\n                        <Form.Control as=\"textarea\" placeholder=\"Description of forum.\" rows=\"3\" value={text} onChange={event => setText(event.target.value)}/>\r\n                    </Form.Group>\r\n\r\n                    <Button to=\"/Forum\" variant=\"primary\" type=\"submit\" onClick = {submitTextMessage}>\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n            </Jumbotron>\r\n        \r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport API from \"../../utils/API\"\r\nimport { Container, Form, Jumbotron, Button } from 'react-bootstrap'\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport '../SubmitEmail/index.css';\r\n\r\nexport default function SubmitEmail() {\r\n    const [title, setTitle] = useState('');\r\n    const [emailText, setEmailText] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [users, setUsers] = useState([]);\r\n\r\n \r\n    const modules = { toolbar: [\r\n        [{ 'header': [1, 2, false] }],\r\n        ['bold', 'italic', 'underline','strike', 'blockquote', 'code-block', 'size', 'script'],\r\n        [{'color': []}],\r\n        [{'font': []}],\r\n        [{'align': []}],\r\n        [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\r\n        ['link'],\r\n        ['clean', 'formula', 'video']\r\n      ],};\r\n\r\n    const submitEmail = event => {\r\n        event.preventDefault();\r\n        API.sendEmail({\r\n            email: email,\r\n            title: title,\r\n            emailText: emailText\r\n        }).then(\r\n         \r\n            setTitle(''),\r\n            setEmailText(''),\r\n            setEmail('')\r\n        ).catch(\r\n            console.log(\"error\")\r\n        )\r\n\r\n    }\r\n    const getUsers = event => {\r\n        event.preventDefault();\r\n        API.getUsers().then(\r\n           function(response){\r\n               console.log(response)\r\n           }\r\n        ).catch(\r\n            console.log(\"error\")\r\n        )\r\n\r\n    }\r\n    useEffect(() => {\r\n        API.getUsers().then(\r\n            function(response){\r\n                console.log(response.data[0].email)\r\n                setUsers(response.data)\r\n            }\r\n        )\r\n\r\n        return () => {};\r\n    }, []);\r\n    \r\n    return (\r\n        <div>\r\n            <Jumbotron fluid>\r\n            <Container>\r\n                <h1>Submit Email</h1>\r\n            \r\n             \r\n                <Form>\r\n                <Form.Group controlId=\"emailSelect\">\r\n                    <Form.Label>Email Group</Form.Label>\r\n                    <Form.Control as=\"select\">\r\n                    {users.map(item => <option>{item.firstName}&nbsp;{item.lastName}&nbsp;&nbsp;{item.email}</option>)}\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control placeholder=\"Email\" value={email} onChange={event => setEmail(event.target.value)} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"forumTitle\">\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control placeholder=\"Title\" value={title} onChange={event => setTitle(event.target.value)} />\r\n                    </Form.Group>\r\n                    <p>Email</p>\r\n                    <ReactQuill theme=\"snow\" className='ql-container' style={{backgroundColor:'#FFFFFF'}} modules={modules} value={emailText} onChange={setEmailText}/>\r\n                    <br />\r\n                    <Button to=\"/Forum\" variant=\"primary\" type=\"submit\" onClick={submitEmail}>\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n            </Jumbotron>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React, { useState } from 'react'\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Elements, CardElement, useStripe, useElements} from \"@stripe/react-stripe-js\"\r\nimport { Button, Form, Container, Jumbotron, Col} from 'react-bootstrap'\r\nimport API from '../../utils/API'\r\n\r\n\r\nconst CheckoutForm = () => {\r\n\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    //billing details\r\n    const [city, setCity] = useState('');\r\n    const [line1, setLine1] = useState('');\r\n    const [line2, setLine2] = useState('');\r\n    const [postal_code, setPostalCode] = useState('');\r\n    const [state, setState] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [name, setName] = useState('');\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n            type: 'card',\r\n            card: elements.getElement(CardElement),\r\n            billing_details: {\r\n                address: {\r\n                    city: city,\r\n                    line1: line1,\r\n                    line2: line2,\r\n                    postal_code: postal_code,\r\n                    state: state\r\n                },\r\n                email: email,\r\n                name: name\r\n            }\r\n        });\r\n\r\n        if (!error) {\r\n            const { id } = paymentMethod\r\n            API.sendPayment({ id, amount: 51 })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Jumbotron fluid>\r\n            <Container>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control type=\"name\" placeholder=\"Full Name\" onChange={event => setName(event.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control value={email} type=\"email\" placeholder=\"Enter email\" onChange={event => setEmail(event.target.value)}   />\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Form.Group controlId=\"formGridAddress1\">\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control placeholder=\"1234 Main St\" onChange={event => setLine1(event.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formGridAddress2\">\r\n                        <Form.Label>Address 2</Form.Label>\r\n                        <Form.Control placeholder=\"Apartment, studio, or floor\" onChange={event => setLine2(event.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridCity\">\r\n                            <Form.Label>City</Form.Label>\r\n                            <Form.Control onChange={event => setCity(event.target.value)} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Label>State</Form.Label>\r\n                            <Form.Control as=\"select\" value=\"Choose...\" onChange={event => setState(event.target.value)} >\r\n                                <option>Choose...</option>\r\n                                <option>...</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridZip\">\r\n                            <Form.Label>Zip</Form.Label>\r\n                            <Form.Control onChange={event => setPostalCode(event.target.value)}  />\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"card-element\">Payment Information</label>\r\n                        <div id=\"card-element\" class=\"form-control\" style={{ height: \"2.4em\", paddingTop: \"0.7em\" }}>\r\n                            <CardElement />\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                    <Button type=\"submit\" disabled={!stripe}>\r\n                        Sumbit Payment\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </Jumbotron>\r\n\r\n    )\r\n}\r\n\r\nexport default function index() {\r\n\r\n    const stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY)\r\n    return (\r\n        <Elements stripe={stripePromise}>\r\n            <CheckoutForm />\r\n        </Elements>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import API from \"../../utils/API\"\r\n// import StripeCheckout from 'react-stripe-checkout'\r\n// import CheckoutForm from '../CheckoutForm'\r\n// import { Container, Jumbotron, Button } from 'react-bootstrap'\r\n// import { Elements } from '@stripe/react-stripe-js'\r\n// import { loadStripe } from '@stripe/stripe-js'\r\n// export default function SubmitPayment() {\r\n\r\n//     const stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY)\r\n\r\n//     const [product] = useState({\r\n//         name: \"membership\",\r\n//         price: 10,\r\n//     });\r\n\r\n//     const submitPayment = token => {\r\n\r\n//         const body = {\r\n//             token,\r\n//             product\r\n//         }\r\n\r\n//         API.sendPayment({\r\n//             body\r\n//         }).then(response => {\r\n//             // API.sendEmail({\r\n//             //     email: 'kima111@gmail.com',\r\n//             //     title: 'title',\r\n//             //     emailText: 'emailtext'\r\n\r\n//             // })\r\n\r\n//             console.log(response)\r\n//         }).catch(\r\n//             console.log(\"error\")\r\n//         )\r\n\r\n//     }\r\n//     return (\r\n//         <div>\r\n//             <Jumbotron fluid>\r\n//             <Container>\r\n//                 <h1>Submit Payment</h1>\r\n//                 <Elements stripe={stripePromise}>\r\n//                     <CheckoutForm />\r\n//                 </Elements>\r\n//                     {/* <StripeCheckout\r\n//                     stripeKey = {process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY}\r\n//                     token={submitPayment}\r\n//                     name=\"Submit Payment\"\r\n//                     >\r\n//                     <Button>Submit Payment</Button>\r\n//                     </StripeCheckout> */}\r\n//             </Container>\r\n//             </Jumbotron>\r\n//         </div>\r\n//     )\r\n// }\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Table, Container, Jumbotron } from 'react-bootstrap'\r\nimport API from '../../utils/API'\r\nexport default function UserDirectory() {\r\n\r\n    const [users, setUsers] = useState([]);  \r\n    useEffect(() => {\r\n        API.getUsers().then(\r\n            function(response){\r\n                console.log(response.data[0].email)\r\n                setUsers(response.data)\r\n            }\r\n        )\r\n\r\n        return () => {};\r\n    }, []);\r\n    return (\r\n        <div>\r\n            <Jumbotron fluid style={{ backgroundColor: \"#FFFFFF\" }}>\r\n            <Container>\r\n            <h1>User Directory</h1>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>First Name</th>\r\n                        <th>Last Name</th>\r\n                        <th>Email</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {users.map(item => \r\n                    <tr>\r\n                        <td>{item.firstName}</td>\r\n                        <td>{item.lastName}</td>\r\n                        <td>{item.email}</td>\r\n                    </tr>\r\n                )}\r\n                    \r\n                </tbody>\r\n            </Table>\r\n            </Container>\r\n            </Jumbotron>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useContext} from 'react'\r\nimport { UserContext } from '../../UserContext';\r\nimport {\r\n  BrowserRouter as Router,  \r\n  Route,\r\n  Redirect\r\n} from 'react-router-dom'\r\n\r\n\r\nexport default function ProtectedRoute({component: Component,loggedIn: LoggedIn, ...rest }) {\r\n\r\n  const {isLoggedIn} = useContext(UserContext)\r\n \r\n  return (\r\n    <div>\r\n    <Router>\r\n    <Route {...rest} render={(props) => (\r\n        isLoggedIn === true\r\n        ? <Component {...props} />\r\n        : <Redirect to='/' />\r\n    )} />\r\n    </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","import React, {useContext} from 'react'\r\nimport { UserContext } from '../../UserContext';\r\nimport {\r\n  BrowserRouter as Router,  \r\n  Route,\r\n  Redirect\r\n} from 'react-router-dom'\r\n\r\n\r\nexport default function ProtectedRoute({component: Component,loggedIn: LoggedIn, ...rest }) {\r\n\r\n  const {isAdmin} = useContext(UserContext)\r\n \r\n  return (\r\n    <div>\r\n    <Router>\r\n    <Route {...rest} render={(props) => (\r\n        isAdmin === true\r\n        ? <Component {...props} />\r\n        : <Redirect to='/' />\r\n    )} />\r\n    </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","import React, { useState } from 'react'\nimport Layout from '../src/components/Layout'\nimport Main from '../src/components/Main'\nimport About from '../src/components/About'\nimport Welcome from '../src/components/Welcome'\nimport SignOut from '../src/components/SignOut'\nimport Forum from '../src/components/Forum'\nimport SubmitForum from '../src/components/SubmitForum'\nimport SubmitTextMessage from '../src/components/SubmitTextMessage'\nimport SubmitEmail from '../src/components/SubmitEmail'\nimport SubmitPayment from '../src/components/SubmitPayment'\nimport UserDirectory from '../src/components/UserDirectory'\nimport { UserContext } from './UserContext'\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\"\nimport UserProtectedRoute from '../src/components/UserProtectedRoutes'\nimport AdminProtectedRoute from '../src/components/AdminProtectedRoutes'\n\n\nexport default function App() {\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [userInfo, setUserInfo] = useState({});\n\n  return (\n    <Router>\n    <UserContext.Provider value={{isLoggedIn, setLoggedIn, isAdmin, setIsAdmin, userInfo, setUserInfo}}>      \n    \n\n     <Layout></Layout>\n        <Switch>\n          <Route exact path=\"/\" component={Main} />\n          <Route exact path=\"/About\" component={About} />\n          <Route exact path=\"/SignOut\" component={SignOut} />\n          <UserProtectedRoute exact path=\"/Welcome\" component={Welcome} />\n          <AdminProtectedRoute exact path=\"/SubmitForum\" component={SubmitForum} />\n          <AdminProtectedRoute exact path=\"/SubmitTextMessage\" component={SubmitTextMessage} />\n          <AdminProtectedRoute exact path=\"/SubmitEmail\" component={SubmitEmail} />\n          <AdminProtectedRoute exact path=\"/UserDirectory\" component={UserDirectory} />\n          <UserProtectedRoute exact path=\"/Forum\" component={Forum} />\n          <UserProtectedRoute exact path=\"/SubmitPayment\" component={SubmitPayment} />\n          \n        </Switch>\n    \n    \n      \n    </UserContext.Provider>\n    </Router>\n  )\n}\n"],"sourceRoot":""}